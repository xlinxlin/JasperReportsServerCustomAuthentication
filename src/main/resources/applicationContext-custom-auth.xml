<!--
  ~ Copyright (C) 2005 - 2020 TIBCO Software Inc. All rights reserved.
  ~ http://www.jaspersoft.com.
  ~
  ~ Unless you have purchased a commercial license agreement from Jaspersoft,
  ~ the following license terms apply:
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU Affero General Public License as
  ~ published by the Free Software Foundation, either version 3 of the
  ~ License, or (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  ~ GNU Affero General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Affero General Public License
  ~ along with this program. If not, see <http://www.gnu.org/licenses/>.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">

    <!-- ########## External JDBC Auth ###########
      - Sample configuration of JasperServer authentication via an external database
    -->
    <bean id="proxyAuthenticationProcessingFilter" class="com.jaspersoft.jasperserver.api.security.EncryptionAuthenticationProcessingFilter"
          parent="authenticationProcessingFilter">
        <property name="authenticationManager">
            <ref bean="dbAuthenticationManager"/>
        </property>
        <property name="authenticationSuccessHandler" ref="externalAuthSuccessHandler" />
    </bean>

    <bean id="proxyAuthenticationRestProcessingFilter"
          class="com.jaspersoft.jasperserver.api.security.externalAuth.DefaultAuthenticationRestProcessingFilter">
        <property name="authenticationManager" ref="dbAuthenticationManager"/>

        <property name="authenticationFailureHandler">
            <bean class="com.jaspersoft.jasperserver.api.security.externalAuth.RestAuthenticationFailureHandler"/>
        </property>
        <property name="authenticationSuccessHandler">
            <bean class="com.jaspersoft.jasperserver.api.security.externalAuth.RestAuthenticationSuccessHandler">
                <property name="externalDataSynchronizer" ref="externalDataSynchronizer"/>
            </bean>
        </property>

        <property name="rememberMeServices">
            <bean class="org.springframework.security.web.authentication.NullRememberMeServices" />
        </property>

        <property name="filterProcessesUrl" value="/rest_v2/login"/>
    </bean>

    <bean id="proxyRequestParameterAuthenticationFilter"
          class="com.jaspersoft.jasperserver.war.util.ExternalRequestParameterAuthenticationFilter" parent="requestParameterAuthenticationFilter">
        <property name="authenticationManager">
            <ref bean="dbAuthenticationManager"/>
        </property>
        <property name="externalDataSynchronizer" ref="externalDataSynchronizer"/>
    </bean>

    <bean id="proxyRestRequestParameterAuthenticationFilter"
          class="com.jaspersoft.jasperserver.war.util.ExternalRequestParameterAuthenticationFilter" parent="restRequestParameterAuthenticationFilter">
        <property name="authenticationManager">
            <ref bean="dbAuthenticationManager"/>
        </property>
        <property name="externalDataSynchronizer" ref="externalDataSynchronizer"/>
    </bean>

    <bean id="externalAuthSuccessHandler"
          class="com.jaspersoft.jasperserver.api.security.externalAuth.JrsExternalAuthenticationSuccessHandler" parent="successHandler">
        <property name="externalDataSynchronizer">
            <ref bean="externalDataSynchronizer"/>
        </property>
    </bean>

    <bean id="proxyBasicProcessingFilter"
          class="com.jaspersoft.jasperserver.api.security.externalAuth.ExternalAuthBasicProcessingFilter" parent="basicProcessingFilter">
        
         <constructor-arg index="0" ref="dbAuthenticationManager"/>
        <property name="externalDataSynchronizer" ref="externalDataSynchronizer"/>
        
    </bean>

    <bean id="dbAuthenticationManager" class="com.jaspersoft.jasperserver.api.security.externalAuth.wrappers.spring.JSProviderManager">
        <constructor-arg index="0">
            <list>
                <ref bean="externalPCustomAuthenticationProvider"/>
                <ref bean="${bean.daoAuthenticationProvider}"/>
            </list>
        </constructor-arg>
    </bean>

    <bean id="externalPCustomAuthenticationProvider" class="de.yanzhou.jasperserver.api.security.externalAuth.wrappers.spring.security.authentication.PCustomAuthenticationProvider">
        <property name="dbUserNameAttr" value="dbusername"/>
        <property name="dbUserPasswordAttr" value="dbpassword"/>
        <property name="dbNameAttr" value="dbname"/>
        <property name="dbHostAttr" value="dbhost"/>
        <property name="dbPortAttr" value="dbport"/>
    </bean>

    <bean id="externalDataSynchronizer"
          class="com.jaspersoft.jasperserver.api.security.externalAuth.ExternalDataSynchronizerImpl">
        <property name="externalUserProcessors">
            <list>
                <ref bean="externalUserSetupProcessor"/>
                <ref bean="pExternalProfileAttributeProcessor"/>
                <!-- Example processor for creating user folder.
                    Other custom processors can be created and
                    added to the list.-->
            </list>
        </property>
    </bean>

    <bean id="externalUserSetupProcessor" class="com.jaspersoft.jasperserver.api.security.externalAuth.processors.ExternalUserSetupProcessor" parent="abstractExternalProcessor">
    
        <property name="permittedExternalRoleNameRegex" value="[A-Za-z0-9_]+"/>

        <property name="userAuthorityService">
            <ref bean="${bean.internalUserAuthorityService}"/>
        </property>

        <property name="organizationRoleMap">
            <map>
                <!-- Mapping external roles to JRS internal roles. Example: map external role ADMIN to JRS role ROLE_ADMINISTRATOR  -->
                <!--<entry key="ADMIN" value="ROLE_ADMINISTRATOR" />-->
                <!--<entry key="EXT" value="ROLE_EXT" />-->
            </map>
        </property>

        <property name="defaultInternalRoles">
            <list>
                <value>ROLE_USER</value>
            </list>
        </property>
    </bean>

    <bean id="abstractExternalProcessor"
          class="com.jaspersoft.jasperserver.api.security.externalAuth.processors.AbstractExternalUserProcessor"
          abstract="true">
        <property name="repositoryService" ref="${bean.repositoryService}"/>
        <property name="userAuthorityService" ref="${bean.userAuthorityService}"/>
        <property name="tenantService" ref="${bean.tenantService}"/>
        <property name="profileAttributeService" ref="profileAttributeService"/>
        <property name="objectPermissionService" ref="objectPermissionService"/>
    </bean>

    <bean id="pExternalProfileAttributeProcessor" class="de.yanzhou.jasperserver.api.security.externalAuth.processors.PExternalProfileAttributeProcessor" parent="abstractExternalProcessor">
    </bean>

</beans>
